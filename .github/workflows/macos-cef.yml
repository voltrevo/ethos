name: build-macos-cef
on:
  push:
  workflow_dispatch:

env:
  # 1) Set your hardcoded start URL here.
  START_URL: "https://example.com"

  # 2) Paste a valid macOS ARM64 **Standard Distribution** CEF URL here.
  # Get one from: https://cef-builds.spotifycdn.com/index.html  (MacOS ARM64)
  # Example (replace with a current build from the site):
  CEF_DOWNLOAD: "https://cef-builds.spotifycdn.com/cef_binary_141.0.11%2Bg7e73ac4%2Bchromium-141.0.7390.123_macosarm64.tar.bz2"
  CEF_SHA1: "25191857fe1faf6862f395ffe593a84709ccf07d"

jobs:
  build-macos-arm64:
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4

      - name: Install tools
        run: |
          brew install ninja cmake || true

      - name: Cache CEF download
        uses: actions/cache@v4
        with:
          path: third_party/cef
          key: cef-${{ env.CEF_SHA1 }}
          max-age-days: 3

      - name: Fetch CEF (macOS arm64)
        run: |
          if [[ -d third_party/cef ]]; then
            echo "CEF cache hit, skipping download"
          else
            mkdir -p third_party && cd third_party
            curl -L -o cef.tar.bz2 "$CEF_DOWNLOAD"
            # Verify SHA1
            echo "$CEF_SHA1  cef.tar.bz2" | shasum -c -
            tar -xjf cef.tar.bz2
            mv cef_binary_* cef
          fi

      - name: Patch ethos (hardcode URL)
        run: |
          bash scripts/patch_ethos.sh "$GITHUB_WORKSPACE"

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: third_party/cef/build
          key: cef-build-${{ env.CEF_SHA1 }}-${{ hashFiles('patches/**', 'scripts/patch_ethos.sh') }}
          max-age-days: 3

      - name: Configure CMake (Release, arm64)
        working-directory: third_party/cef
        run: |
          mkdir -p build && cd build
          cmake -G Ninja -DPROJECT_ARCH=arm64 -DCMAKE_BUILD_TYPE=Release ..

      - name: Build ethos
        working-directory: third_party/cef/build
        run: cmake --build . --target cefsimple

      - name: Compress app
        working-directory: third_party/cef/build
        run: |
          # Find the app bundle
          APP_PATH=""
          if [[ -d "tests/cefsimple/Release/cefsimple.app" ]]; then
            APP_PATH="tests/cefsimple/Release/cefsimple.app"
          elif [[ -d "cefsimple/Release/cefsimple.app" ]]; then
            APP_PATH="cefsimple/Release/cefsimple.app"
          fi
          
          if [[ -z "$APP_PATH" ]]; then
            echo "Error: ethos.app not found"
            exit 1
          fi
          
          echo "Compressing app: $APP_PATH"
          tar -czf ethos-arm64-release.tar.gz -C "$(dirname "$APP_PATH")" "$(basename "$APP_PATH")"
          ls -lh ethos-arm64-release.tar.gz

      - name: Show app path
        working-directory: third_party/cef/build
        run: |
          echo "Built app:"
          pwd
          ls -lh ethos-arm64-release.tar.gz

      - name: Upload app
        uses: actions/upload-artifact@v4
        with:
          name: ethos-macos-arm64-release
          path: third_party/cef/build/ethos-arm64-release.tar.gz
          retention-days: 3
          compression-level: 0
          if-no-files-found: warn
